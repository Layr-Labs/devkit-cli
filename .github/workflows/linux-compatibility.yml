name: Linux Compatibility Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches: ["**"]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  linux-compatibility:
    name: Linux Compatibility Testing
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Free up disk space
        run: |
          docker system prune -f
          df -h

      - name: Make script executable
        run: chmod +x ./scripts/linux-compatibility.sh

      - name: Run Linux compatibility tests
        run: ./scripts/linux-compatibility.sh

      - name: Save test results as artifact
        if: always()
        run: |
          # Try to extract test results from the container if it exists
          docker run --rm --add-host=host.docker.internal:host-gateway devkit-linux-test cat test-results.txt > test-results.txt 2>/dev/null || echo "Could not extract test results"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: linux-compatibility-results
          path: test-results.txt
          retention-days: 30

      - name: Archive test results on failure
        if: failure()
        run: |
          echo "📁 Collecting debug information..."
          docker images | grep devkit || echo "No devkit images found"
          docker ps -a | grep devkit || echo "No devkit containers found"
          docker system df

      - name: Cleanup Docker resources
        if: always()
        run: |
          docker container prune -f || true
          docker image prune -f || true 