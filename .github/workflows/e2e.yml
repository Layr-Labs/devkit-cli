name: Devkit E2E Test

on:
  push:
    branches: [main]
  pull_request:
    branches: ["**"]

env:
  FOUNDRY_PROFILE: ci
  GOPRIVATE: github.com/Layr-Labs/*
  L1_FORK_URL: ${{ secrets.L1_FORK_URL }}
  L2_FORK_URL: ${{ secrets.L2_FORK_URL }}

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Authenticate Go to GitHub private repos
        run: |
          git config --global url."https://${{ secrets.HOURGLASS_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          echo "machine github.com login ${{ secrets.HOURGLASS_TOKEN }}" > ~/.netrc

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: grezle
          password: ${{ secrets.GHCR_PAT_TOKEN }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install devkit CLI
        run: make install

      - name: Add ~/bin to PATH
        run: echo "$HOME/bin" >> $GITHUB_PATH

      - name: Run devkit avs create
        run: devkit avs create my-awesome-avs

      - name: Verify AVS project created
        run: |
          if [ ! -f "./my-awesome-avs/config/config.yaml" ]; then
            echo "❌ AVS project config/config.yaml not found!"
            exit 1
          fi
          echo "✅ AVS project created successfully at ${GITHUB_WORKSPACE}/my-awesome-avs/"

      - name: Lowercase owner
        run: echo "OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build & push performer image
        uses: docker/build-push-action@v4
        env:
          DOCKER_BUILDKIT: 1
        with:
          context: ./my-awesome-avs
          push: true
          tags: ghcr.io/${{ env.OWNER }}/performer:${{ github.sha }}
          ssh: default

      - name: Start pull-through mirror
        run: |
          docker run -d --name registry-mirror -p 5000:5000 registry:2
          # points Docker to mirror for *all* hub pulls (optional)
          echo '{"registry-mirrors":["http://localhost:5000"]}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker
          
      - name: Seed mirror (local pull-through)
        run: |
          docker pull ghcr.io/${{ env.OWNER }}/performer:${{ github.sha }} \
          && docker tag ghcr.io/${{ env.OWNER }}/performer:${{ github.sha }} localhost:5000/performer:${{ github.sha }} \
          && docker push localhost:5000/performer:${{ github.sha }}

      - name: Run devkit avs build
        env:
            DOCKER_BUILDKIT: 1
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | ssh-add -
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          cd ./my-awesome-avs/
          devkit avs build

      - name: Start devnet
        run: |
          cd ./my-awesome-avs/
          devkit avs devnet start
          sleep 10

      - name: Check devnet RPC is live
        run: |
          for i in {1..10}; do
            bn=$(cast block-number --rpc-url http://localhost:8545 || echo "error")
            if [ "$bn" != "error" ]; then
              echo "Current block number: $bn"
              exit 0
            fi
            echo "Waiting for devnet... retrying in 2s"
            sleep 2
          done
          echo "❌ Devnet failed to start"
          exit 1

      - name: Stop devnet
        run: |
          cd ./my-awesome-avs/
          devkit avs devnet stop